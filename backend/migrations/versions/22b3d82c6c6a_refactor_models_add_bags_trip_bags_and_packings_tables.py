"""Refactor models: Add bags, trip_bags, and packings tables

Revision ID: 22b3d82c6c6a
Revises: bee86553ca1a
Create Date: 2025-08-07 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '22b3d82c6c6a'
down_revision: Union[str, Sequence[str], None] = 'bee86553ca1a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop old tables
    op.drop_table('item_luggage')
    op.drop_table('luggage_trip')
    
    # Rename bag table to bags
    op.rename_table('bag', 'bags')
    
    # Create trip_bags table (association table)
    op.create_table('trip_bags',
        sa.Column('trip_id', sa.Integer(), nullable=False),
        sa.Column('bag_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
        sa.ForeignKeyConstraint(['bag_id'], ['bags.id'], ),
        sa.PrimaryKeyConstraint('trip_id', 'bag_id')
    )
    
    # Create packings table
    op.create_table('packings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('trip_id', sa.Integer(), nullable=False),
        sa.Column('item_id', sa.Integer(), nullable=False),
        sa.Column('bag_id', sa.Integer(), nullable=True),
        sa.Column('quantity', sa.Integer(), nullable=False),
        sa.Column('status', sa.Enum('UNPACKED', 'PACKED', 'TO_BUY', name='itemstatus'), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
        sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
        sa.ForeignKeyConstraint(['bag_id'], ['bags.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Update foreign key references in packings table
    op.create_foreign_key(None, 'packings', 'trips', ['trip_id'], ['id'])
    op.create_foreign_key(None, 'packings', 'items', ['item_id'], ['id'])
    op.create_foreign_key(None, 'packings', 'bags', ['bag_id'], ['id'])
    op.create_foreign_key(None, 'trip_bags', 'trips', ['trip_id'], ['id'])
    op.create_foreign_key(None, 'trip_bags', 'bags', ['bag_id'], ['id'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Recreate old tables
    op.create_table('luggage_trip',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('luggage_id', sa.INTEGER(), nullable=False),
        sa.Column('trip_id', sa.INTEGER(), nullable=False),
        sa.Column('created_at', sa.DATETIME(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['luggage_id'], ['bags.id'], ),
        sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('item_luggage',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('item_id', sa.INTEGER(), nullable=False),
        sa.Column('luggage_id', sa.INTEGER(), nullable=False),
        sa.Column('status', sa.Enum('UNPACKED', 'PACKED', 'TO_BUY', name='itemstatus'), nullable=False),
        sa.Column('quantity', sa.INTEGER(), nullable=False),
        sa.Column('created_at', sa.DATETIME(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
        sa.ForeignKeyConstraint(['luggage_id'], ['bags.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Drop new tables
    op.drop_table('packings')
    op.drop_table('trip_bags')
    
    # Rename bags table back to bag
    op.rename_table('bags', 'bag')
    
    # ### end Alembic commands ###